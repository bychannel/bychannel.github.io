<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 池鱼的编程随想</title>
        <link>https://bychannel.github.io/posts/</link>
        <description>所有文章 | 池鱼的编程随想</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1132431868@qq.com (池鱼)</managingEditor>
            <webMaster>1132431868@qq.com (池鱼)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 10 Feb 2023 18:06:57 &#43;0800</lastBuildDate><atom:link href="https://bychannel.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>【转载】定点数杂谈</title>
    <link>https://bychannel.github.io/%E5%AE%9A%E7%82%B9%E6%95%B0%E6%9D%82%E8%B0%88/</link>
    <pubDate>Fri, 10 Feb 2023 18:06:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/%E5%AE%9A%E7%82%B9%E6%95%B0%E6%9D%82%E8%B0%88/</guid>
    <description><![CDATA[注：本文转载自 定点数杂谈 - 掘金 如有侵权，联系删除 假如你开发了一个后台系统，其中有关于金额的一些操作。比如说，最小精度是分，也就是一分钱。 那么]]></description>
</item>
<item>
    <title>redis超时重试小结</title>
    <link>https://bychannel.github.io/redis%E8%B6%85%E6%97%B6%E9%87%8D%E8%AF%95%E5%B0%8F%E7%BB%93/</link>
    <pubDate>Wed, 13 Jul 2022 19:20:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/redis%E8%B6%85%E6%97%B6%E9%87%8D%E8%AF%95%E5%B0%8F%E7%BB%93/</guid>
    <description><![CDATA[在互联网服务中，特别是在云环境下，网络及硬件环境复杂，所有应用程序都可能遇到暂时性故障。暂时性故障包括瞬时的网络抖动，服务暂时不可用，服务繁]]></description>
</item>
<item>
    <title>【转载】服务器常见攻击方式和防御</title>
    <link>https://bychannel.github.io/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F%E5%92%8C%E9%98%B2%E5%BE%A1/</link>
    <pubDate>Thu, 23 Jun 2022 17:16:27 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E8%A7%81%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F%E5%92%8C%E9%98%B2%E5%BE%A1/</guid>
    <description><![CDATA[注：本文转载自 https://www.jianshu.com/p/a010f55ac805 如有侵权，联系删除 游戏服务器不管是个人的还是企业的，被攻击都是，很常见的，在所难免的。特别是游戏新上线时，都要承受的住哪些外]]></description>
</item>
<item>
    <title>【转载】使用具名返回值巧妙解决泛型函数返回零值的问题</title>
    <link>https://bychannel.github.io/%E4%BD%BF%E7%94%A8%E5%85%B7%E5%90%8D%E8%BF%94%E5%9B%9E%E5%80%BC%E5%B7%A7%E5%A6%99%E8%A7%A3%E5%86%B3%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E9%9B%B6%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98/</link>
    <pubDate>Sat, 18 Jun 2022 15:10:27 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/%E4%BD%BF%E7%94%A8%E5%85%B7%E5%90%8D%E8%BF%94%E5%9B%9E%E5%80%BC%E5%B7%A7%E5%A6%99%E8%A7%A3%E5%86%B3%E6%B3%9B%E5%9E%8B%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E9%9B%B6%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[注：本文转载自 https://tonybai.com/2022/05/20/solving-problems-in-generic-function-implementation-using-named-return-values/ 如有侵权，联系删除 Go语言泛型语法特性在Go 1.18版本落地后，不出所料，在github上看到大量的基础容器类型数据结构被用]]></description>
</item>
<item>
    <title>go的nil用法</title>
    <link>https://bychannel.github.io/go%E7%9A%84nil%E7%94%A8%E6%B3%95/</link>
    <pubDate>Tue, 07 Jun 2022 16:16:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84nil%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[nil 是 Go 语言中经常使用的标识符，语义上代表了很多类型的零值。相信很多 Gopher 在实际使用中都或多或少踩过 nil 的坑，比如 interface 中 nil 的含义。这篇文章希望梳理一下]]></description>
</item>
<item>
    <title>redis的三种集群方案</title>
    <link>https://bychannel.github.io/redis%E7%9A%84%E4%B8%89%E7%A7%8D%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88/</link>
    <pubDate>Tue, 03 May 2022 17:10:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/redis%E7%9A%84%E4%B8%89%E7%A7%8D%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88/</guid>
    <description><![CDATA[主从复制模式 主从复制的作用 通过持久化功能，Redis保证了即使在服务器重启的情况下也不会丢失（或少量丢失）数据，因为持久化会把内存中数据保存]]></description>
</item>
<item>
    <title>go的set实现方案</title>
    <link>https://bychannel.github.io/go%E7%9A%84set%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</link>
    <pubDate>Fri, 15 Apr 2022 16:36:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84set%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</guid>
    <description><![CDATA[Go 的设计是一种简单哲学，它摒弃了其他语言一些臃肿的功能和模块，以降低程序员的学习门槛，减少使用中的心智负担。 本文，我们来探讨 Go 中缺失的数据结]]></description>
</item>
<item>
    <title>go循环引用优化思路</title>
    <link>https://bychannel.github.io/go%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E4%BC%98%E5%8C%96%E6%80%9D%E8%B7%AF/</link>
    <pubDate>Mon, 04 Apr 2022 14:16:27 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E4%BC%98%E5%8C%96%E6%80%9D%E8%B7%AF/</guid>
    <description><![CDATA[前言 golang是一门极具设计哲学的语言，其中一点是没有支持包循环导入，目的是迫使 Go 程序员更多地考虑程序的依赖关系。一方面保持依赖关系图的简]]></description>
</item>
<item>
    <title>k8s部署go应用入门实践</title>
    <link>https://bychannel.github.io/k8s%E9%83%A8%E7%BD%B2go%E5%BA%94%E7%94%A8%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5/</link>
    <pubDate>Sat, 12 Feb 2022 19:31:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/k8s%E9%83%A8%E7%BD%B2go%E5%BA%94%E7%94%A8%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5/</guid>
    <description><![CDATA[k8s作为目前容器化管理和编排最热门的项目，我们无疑需要马上去学习它，而实践是能够帮助我们快速入门一项技术，在实践的过程中，我们可以理解大致]]></description>
</item>
<item>
    <title>如何生成go包的uml类图</title>
    <link>https://bychannel.github.io/%E7%94%9F%E6%88%90go%E5%8C%85uml%E7%B1%BB%E5%9B%BE/</link>
    <pubDate>Tue, 11 Jan 2022 11:26:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/%E7%94%9F%E6%88%90go%E5%8C%85uml%E7%B1%BB%E5%9B%BE/</guid>
    <description><![CDATA[GoLand内置的Diagrams功能不像IDEA一样强大，不支持生成类图。解决方案是利用github上的 PlantUML 类图生成器：jfeliu007/]]></description>
</item>
</channel>
</rss>
