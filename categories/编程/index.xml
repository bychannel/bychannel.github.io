<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>编程 - 分类 - 池鱼的编程随想</title>
        <link>https://bychannel.github.io/categories/%E7%BC%96%E7%A8%8B/</link>
        <description>编程 - 分类 - 池鱼的编程随想</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1132431868@qq.com (池鱼)</managingEditor>
            <webMaster>1132431868@qq.com (池鱼)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 13 Jul 2022 19:20:57 &#43;0800</lastBuildDate><atom:link href="https://bychannel.github.io/categories/%E7%BC%96%E7%A8%8B/" rel="self" type="application/rss+xml" /><item>
    <title>redis超时重试小结</title>
    <link>https://bychannel.github.io/redis%E8%B6%85%E6%97%B6%E9%87%8D%E8%AF%95%E5%B0%8F%E7%BB%93/</link>
    <pubDate>Wed, 13 Jul 2022 19:20:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/redis%E8%B6%85%E6%97%B6%E9%87%8D%E8%AF%95%E5%B0%8F%E7%BB%93/</guid>
    <description><![CDATA[在互联网服务中，特别是在云环境下，网络及硬件环境复杂，所有应用程序都可能遇到暂时性故障。暂时性故障包括瞬时的网络抖动，服务暂时不可用，服务繁]]></description>
</item>
<item>
    <title>go的nil用法</title>
    <link>https://bychannel.github.io/go%E7%9A%84nil%E7%94%A8%E6%B3%95/</link>
    <pubDate>Tue, 07 Jun 2022 16:16:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84nil%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[nil 是 Go 语言中经常使用的标识符，语义上代表了很多类型的零值。相信很多 Gopher 在实际使用中都或多或少踩过 nil 的坑，比如 interface 中 nil 的含义。这篇文章希望梳理一下]]></description>
</item>
<item>
    <title>go的set实现方案</title>
    <link>https://bychannel.github.io/go%E7%9A%84set%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</link>
    <pubDate>Fri, 15 Apr 2022 16:36:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84set%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</guid>
    <description><![CDATA[Go 的设计是一种简单哲学，它摒弃了其他语言一些臃肿的功能和模块，以降低程序员的学习门槛，减少使用中的心智负担。 本文，我们来探讨 Go 中缺失的数据结]]></description>
</item>
<item>
    <title>go循环引用优化思路</title>
    <link>https://bychannel.github.io/go%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E4%BC%98%E5%8C%96%E6%80%9D%E8%B7%AF/</link>
    <pubDate>Mon, 04 Apr 2022 14:16:27 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E4%BC%98%E5%8C%96%E6%80%9D%E8%B7%AF/</guid>
    <description><![CDATA[前言 golang是一门极具设计哲学的语言，其中一点是没有支持包循环导入，目的是迫使 Go 程序员更多地考虑程序的依赖关系。一方面保持依赖关系图的简]]></description>
</item>
<item>
    <title>如何生成go包的uml类图</title>
    <link>https://bychannel.github.io/%E7%94%9F%E6%88%90go%E5%8C%85uml%E7%B1%BB%E5%9B%BE/</link>
    <pubDate>Tue, 11 Jan 2022 11:26:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/%E7%94%9F%E6%88%90go%E5%8C%85uml%E7%B1%BB%E5%9B%BE/</guid>
    <description><![CDATA[GoLand内置的Diagrams功能不像IDEA一样强大，不支持生成类图。解决方案是利用github上的 PlantUML 类图生成器：jfeliu007/]]></description>
</item>
<item>
    <title>go的类型系统01</title>
    <link>https://bychannel.github.io/go%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F01/</link>
    <pubDate>Tue, 13 Apr 2021 13:16:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F01/</guid>
    <description><![CDATA[本文介绍 类型转换(Conversion)、类型断言(type assertion) 和类型切换（type switch)。 这三个概念类似但是又完全不同。 类型转换 Conversion 将]]></description>
</item>
<item>
    <title>go的类型系统02</title>
    <link>https://bychannel.github.io/go%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F02/</link>
    <pubDate>Tue, 13 Apr 2021 13:16:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F02/</guid>
    <description><![CDATA[本文介绍 类型别名与类型定义。 类型别名 类型别名需要在别名和原类型之间加上赋值符号 = ，使用类型别名定义的类型与原类型等价，Go 语言内建的基本类型]]></description>
</item>
<item>
    <title>go的noCopy机制</title>
    <link>https://bychannel.github.io/go%E7%9A%84nocopy%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Thu, 11 Feb 2021 16:36:57 &#43;0800</pubDate>
    <author>池鱼</author>
    <guid>https://bychannel.github.io/go%E7%9A%84nocopy%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[最近在读Go源码时发现高频注释语句“XXX must not be copied after first use“。例如sync包下的Pool、Cond、WaitGroup、Mutex、Map]]></description>
</item>
</channel>
</rss>
